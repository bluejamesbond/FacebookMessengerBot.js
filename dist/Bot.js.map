{"version":3,"sources":["../src/Bot.js"],"names":["time","setTimeout","resolve","wait","Elements","Buttons","QuickReplies","userCache","Bot","token","verification","debug","_token","_debug","_verification","text","method","json","query","access_token","body","setting_type","greeting","result","input","thread_state","data","event","call_to_actions","payload","to","message","console","log","recipient","id","toJSON","err","JSON","parse","error","type","ee","Error","fields","cache","key","props","fromCache","entry","messaging","raw","sender","fetch","fetchUser","postback","e","isButton","hasOwnProperty","emit","delivery","delivered","mids","optin","param","ref","quick_reply","is_echo","isQuickReply","attachments","groupBy","image","images","map","a","url","video","videos","audio","location","coordinates","object","router","use","get","req","res","send","post","handleMessage","status"],"mappings":"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","file":"Bot.js","sourcesContent":["import EventEmitter from 'events';\r\nimport bodyParser from 'body-parser';\r\nimport {Router} from 'express';\r\nimport Elements from './Elements.js';\r\nimport Buttons from './Buttons.js';\r\nimport QuickReplies from './QuickReplies.js';\r\nimport fetch from './libs/fetch.js';\r\nimport _ from 'lodash';\r\n\r\nexport {Elements, Buttons, QuickReplies};\r\n\r\nconst userCache = {};\r\n\r\nexport async function wait(time) {\r\n  return new Promise(resolve => setTimeout(() => resolve(), time));\r\n}\r\n\r\nclass Bot extends EventEmitter {\r\n  static Buttons = Buttons;\r\n  static Elements = Elements;\r\n\r\n  static wait = wait;\r\n\r\n  constructor(token, verification, debug = false) {\r\n    super();\r\n\r\n    this._token = token;\r\n    this._debug = debug;\r\n    this._verification = verification;\r\n  }\r\n\r\n  async setGreeting(text) {\r\n    const {body: {result}} = await fetch('https://graph.facebook.com/v2.6/me/thread_settings', {\r\n      method: 'post',\r\n      json: true,\r\n      query: {access_token: this._token},\r\n      body: {setting_type: 'greeting', greeting: {text}}\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  async setGetStarted(input) {\r\n    if (!input) {\r\n      const {body: {result}} = await fetch('https://graph.facebook.com/v2.6/me/thread_settings', {\r\n        method: 'delete',\r\n        json: true,\r\n        query: {access_token: this._token},\r\n        body: {\r\n          setting_type: 'call_to_actions',\r\n          thread_state: 'new_thread'\r\n        }\r\n      });\r\n\r\n      return result;\r\n    }\r\n\r\n    const {data, event} = input;\r\n    const {body: {result}} = await fetch('https://graph.facebook.com/v2.6/me/thread_settings', {\r\n      method: 'post',\r\n      json: true,\r\n      query: {access_token: this._token},\r\n      body: {\r\n        setting_type: 'call_to_actions',\r\n        thread_state: 'new_thread',\r\n        call_to_actions: [{payload: JSON.stringify({data, event})}]\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  async setPersistentMenu(input) {\r\n    if (!input) {\r\n      const {body: {result}} = await fetch('https://graph.facebook.com/v2.6/me/thread_settings', {\r\n        method: 'delete',\r\n        json: true,\r\n        query: {access_token: this._token},\r\n        body: {\r\n          setting_type: 'call_to_actions',\r\n          thread_state: 'existing_thread'\r\n        }\r\n      });\r\n\r\n      return result;\r\n    }\r\n\r\n    const {body: {result}} = await fetch('https://graph.facebook.com/v2.6/me/thread_settings', {\r\n      method: 'post',\r\n      json: true,\r\n      query: {access_token: this._token},\r\n      body: {\r\n        setting_type: 'call_to_actions',\r\n        thread_state: 'existing_thread',\r\n        call_to_actions: input\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n\r\n  async send(to, message) {\r\n    if (this._debug) {\r\n      console.log({recipient: {id: to}, message: message ? message.toJSON() : message});\r\n    }\r\n\r\n    try {\r\n      await fetch('https://graph.facebook.com/v2.6/me/messages', {\r\n        method: 'post',\r\n        json: true,\r\n        query: {access_token: this._token},\r\n        body: {recipient: {id: to}, message}\r\n      });\r\n    } catch (e) {\r\n      if (e.text) {\r\n        let text = e.text;\r\n        try {\r\n          const err = JSON.parse(e.text).error;\r\n          text = `${err.type || 'Unknown'}: ${err.message || 'No message'}`;\r\n        } catch (ee) {\r\n          // ignore\r\n        }\r\n\r\n        throw Error(text);\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n\r\n  async fetchUser(id, fields = 'first_name,last_name,profile_pic', cache = false) {\r\n    const key = id + fields;\r\n    let props;\r\n\r\n    if (cache && userCache[key]) {\r\n      props = userCache[key];\r\n      props.fromCache = true;\r\n    } else {\r\n      const {body} = await fetch(`https://graph.facebook.com/v2.6/${id}`, {\r\n        query: {access_token: this._token, fields}, json: true\r\n      });\r\n\r\n      props = body;\r\n      props.fromCache = false;\r\n\r\n      if (cache) {\r\n        userCache[key] = props;\r\n      }\r\n    }\r\n\r\n    return props;\r\n  }\r\n\r\n  async handleMessage(input) {\r\n    const body = JSON.parse(JSON.stringify(input));\r\n    const message = body.entry[0].messaging[0];\r\n    Object.assign(message, message.message);\r\n    delete message.message;\r\n\r\n    message.raw = input;\r\n\r\n    message.sender.fetch = async(fields, cache) => {\r\n      const props = await this.fetchUser(message.sender.id, fields, cache);\r\n      Object.assign(message.sender, props);\r\n      return message.sender;\r\n    };\r\n\r\n    // POSTBACK\r\n    if (message.postback) {\r\n      let postback = {};\r\n\r\n      try {\r\n        postback = JSON.parse(message.postback.payload);\r\n      } catch (e) {\r\n        // ignore\r\n      }\r\n      message.isButton = true;\r\n\r\n      if (postback.hasOwnProperty('data')) {\r\n        message.postback = postback;\r\n        message.data = postback.data;\r\n        message.event = postback.event;\r\n\r\n        this.emit('postback', message.event, message, message.data);\r\n\r\n        if (postback.hasOwnProperty('event')) {\r\n          this.emit(message.event, message, message.data);\r\n        }\r\n      } else {\r\n        this.emit('invalid-postback', message, message.postback);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // DELIVERY\r\n    if (message.delivery) {\r\n      Object.assign(message, message.delivery);\r\n      message.delivered = message.delivery.mids;\r\n\r\n      delete message.delivery;\r\n\r\n      this.emit('delivery', message, message.delivered);\r\n      return;\r\n    }\r\n\r\n    // OPTIN\r\n    if (message.optin) {\r\n      message.param = message.optin.ref || true;\r\n      message.optin = message.param;\r\n      this.emit('optin', message, message.optin);\r\n      return;\r\n    }\r\n\r\n    // QUICK_REPLY\r\n    if (message.quick_reply && !message.is_echo) {\r\n      let postback = {};\r\n\r\n      try {\r\n        postback = JSON.parse(message.quick_reply.payload);\r\n      } catch (e) {\r\n        // ignore\r\n      }\r\n\r\n      message.isQuickReply = true;\r\n\r\n      if (postback.hasOwnProperty('data')) {\r\n        message.postback = postback;\r\n        message.data = postback.data;\r\n        message.event = postback.event;\r\n\r\n        this.emit('postback', message.event, message, message.data);\r\n\r\n        if (postback.hasOwnProperty('event')) {\r\n          this.emit(message.event, message, message.data);\r\n        }\r\n      } else {\r\n        this.emit('invalid-postback', message, message.postback);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const attachments = _.groupBy(message.attachments, 'type');\r\n\r\n    if (attachments.image) {\r\n      message.images = attachments.image.map(a => a.payload.url);\r\n    }\r\n\r\n    if (attachments.video) {\r\n      message.videos = attachments.video.map(a => a.payload.url);\r\n    }\r\n\r\n    if (attachments.audio) {\r\n      message.audio = attachments.audio.map(a => a.payload.url)[0];\r\n    }\r\n\r\n    if (attachments.location) {\r\n      const location = attachments.location[0];\r\n      message.location = {...location, ...location.payload.coordinates};\r\n      delete message.location.payload;\r\n    }\r\n\r\n    message.object = body.object;\r\n\r\n    delete message.attachments;\r\n\r\n    this.emit('message', message);\r\n  }\r\n\r\n  router() {\r\n    const router = new Router();\r\n\r\n    router.use(bodyParser.json());\r\n\r\n    router.get('/', (req, res) => {\r\n      if (req.query['hub.verify_token'] === this._verification) {\r\n        res.send(req.query['hub.challenge']);\r\n      } else {\r\n        res.send('Error, wrong validation token');\r\n      }\r\n    });\r\n\r\n    router.post('/', (req, res) => {\r\n      this.handleMessage(req.body);\r\n      res.send().status(200);\r\n    });\r\n\r\n    return router;\r\n  }\r\n}\r\n\r\nexport {Bot};\r\n\r\nexport default Bot;\r\n"]}