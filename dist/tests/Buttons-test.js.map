{"version":3,"sources":["../../src/tests/Buttons-test.js"],"names":["describe","it","buttons","add","text","url","phone","share","deepEqual","type","title","payload","toJSON","fail","e","ok","from","data","event"],"mappings":";;AAAA;;;;AACA;;;;AAGAA,SAAS,SAAT,EAAoB,YAAM;AACxBC,KAAG,SAAH,EAAc,YAAM;AAClB,QAAMC,UAAU,eAAhB;AACAA,YAAQC,GAAR,CAAY,EAACC,MAAM,QAAP,EAAiBC,KAAK,mBAAtB,EAAZ;AACAH,YAAQC,GAAR,CAAY,EAACC,MAAM,SAAP,EAAkBE,OAAO,eAAzB,EAAZ;AACAJ,YAAQC,GAAR,CAAY,EAACI,OAAO,IAAR,EAAZ;;AAEA,qBAAOC,SAAP,CAAiB,CACf,EAACC,MAAM,SAAP,EAAkBJ,KAAK,mBAAvB,EAA4CK,OAAO,QAAnD,EADe,EAEf,EAACD,MAAM,cAAP,EAAuBC,OAAO,SAA9B,EAAyCC,SAAS,eAAlD,EAFe,EAGf,EAACF,MAAM,eAAP,EAHe,CAAjB,EAIGP,QAAQU,MAAR,EAJH;AAKD,GAXD;;AAaAX,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAI;AACF,UAAMC,UAAU,eAAhB;AACAA,cAAQC,GAAR,CAAY,EAAZ;AACA,uBAAOU,IAAP,CAAY,6BAAZ;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACV,uBAAOC,EAAP,CAAU,mCAAV;AACD;AACF,GARD;;AAUAd,KAAG,qBAAH,EAA0B,YAAM;AAC9B,QAAI;AACF,gBAAQe,IAAR,CAAa,CAAC,EAACC,MAAM,EAAP,EAAWb,MAAM,KAAjB,EAAD,EAA0B,EAACa,MAAM,EAAP,EAAWb,MAAM,KAAjB,EAA1B,CAAb;AACA,uBAAOW,EAAP,CAAU,kBAAV;AACD,KAHD,CAGE,OAAOD,CAAP,EAAU;AACV,uBAAOD,IAAP,CAAY,6BAAZ;AACD;AACF,GAPD;;AAUAZ,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAI;AACF,UAAMC,UAAU,eAAhB;AACAA,cAAQC,GAAR,CAAY,EAACe,OAAO,cAAR,EAAZ;AACA,uBAAOL,IAAP,CAAY,6BAAZ;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACV,uBAAOC,EAAP,CAAU,mCAAV;AACD;AACF,GARD;AASD,CA3CD","file":"Buttons-test.js","sourcesContent":["import assert from 'assert';\r\nimport {Buttons} from '../..';\r\n\r\n\r\ndescribe('Buttons', () => {\r\n  it('#toJSON', () => {\r\n    const buttons = new Buttons();\r\n    buttons.add({text: 'Google', url: 'http://google.com'});\r\n    buttons.add({text: 'Call us', phone: '+808 63718243'});\r\n    buttons.add({share: true});\r\n\r\n    assert.deepEqual([\r\n      {type: 'web_url', url: 'http://google.com', title: 'Google'},\r\n      {type: 'phone_number', title: 'Call us', payload: '+808 63718243'},\r\n      {type: 'element_share'}\r\n    ], buttons.toJSON());\r\n  });\r\n\r\n  it('should throw an error', () => {\r\n    try {\r\n      const buttons = new Buttons();\r\n      buttons.add({});\r\n      assert.fail('should have thrown an error');\r\n    } catch (e) {\r\n      assert.ok('does not have data/url attributes');\r\n    }\r\n  });\r\n\r\n  it('should parse object', () => {\r\n    try {\r\n      Buttons.from([{data: [], text: 'sup'}, {data: [], text: 'cat'}]);\r\n      assert.ok('parsed correctly');\r\n    } catch (e) {\r\n      assert.fail('should have thrown an error');\r\n    }\r\n  });\r\n\r\n\r\n  it('should throw an error', () => {\r\n    try {\r\n      const buttons = new Buttons();\r\n      buttons.add({event: 'simple-event'});\r\n      assert.fail('should have thrown an error');\r\n    } catch (e) {\r\n      assert.ok('does not have data/url attributes');\r\n    }\r\n  });\r\n});\r\n"]}